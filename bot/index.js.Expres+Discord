// ===== HTTP (Express) =====
import 'dotenv/config';
import express from 'express';
import helmet from 'helmet';
import morgan from 'morgan';
import compression from 'compression';
import cors from 'cors';

// ===== Discord =====
import { Client, GatewayIntentBits, REST, Routes, InteractionType } from 'discord.js';

const app = express();
const PORT = process.env.PORT || 3000;

// Middlewares enterprise
app.use(helmet());
app.use(compression());
app.use(cors({ origin: '*' }));
app.use(morgan('combined'));
app.use(express.json());

// Healthchecks
app.get('/health', (_, res) => res.status(200).json({ ok: true }));
app.get('/ready',  (_, res) => res.status(200).json({ ready: true }));

// Home
app.get('/', (_, res) => {
  res.send('👑 Royal backend vivo (Railway) — enterprise + Discord bot online');
});

// Arranque HTTP
const server = app.listen(PORT, () => {
  console.log(`🚂 Railway on :${PORT}`);
});
for (const sig of ['SIGTERM','SIGINT']) {
  process.on(sig, () => server.close(() => process.exit(0)));
}

// ===== Discord Bot (slash commands) =====
const client = new Client({
  intents: [GatewayIntentBits.Guilds]
});

// Define comandos
const commands = [
  { name: 'ping',  description: 'Responde con pong 🏓' },
  { name: 'royal', description: 'Status del Street Emporio Royal 👑' }
];

// Registra slash commands (rápido en un solo server si pones GUILD_ID)
async function registerCommands() {
  const rest = new REST({ version: '10' }).setToken(process.env.DISCORD_TOKEN);
  if (process.env.GUILD_ID) {
    await rest.put(
      Routes.applicationGuildCommands(process.env.CLIENT_ID, process.env.GUILD_ID),
      { body: commands }
    );
    console.log('✅ Slash commands registrados en el GUILD.');
  } else {
    await rest.put(Routes.applicationCommands(process.env.CLIENT_ID), { body: commands });
    console.log('✅ Slash commands GLOBALS registrados (pueden tardar ~1h).');
  }
}

client.once('ready', () => {
  console.log(`🤖 Bot conectado como ${client.user.tag}`);
});

client.on('interactionCreate', async (interaction) => {
  if (interaction.type !== InteractionType.ApplicationCommand) return;

  try {
    if (interaction.commandName === 'ping') {
      await interaction.reply({ content: '🏓 Pong!', ephemeral: true });
    }
    if (interaction.commandName === 'royal') {
      await interaction.reply({ content: '👑 Street Emporio Royal está en línea 🚀', ephemeral: true });
    }
  } catch (e) {
    console.error('❌ Error command:', e);
    if (interaction.deferred || interaction.replied) {
      await interaction.followUp({ content: 'Error interno.', ephemeral: true });
    } else {
      await interaction.reply({ content: 'Error interno.', ephemeral: true });
    }
  }
});

// Arranque Discord
await registerCommands();
await client.login(process.env.DISCORD_TOKEN);
